version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_auth
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app-auth:
    container_name: app-auth
    restart: on-failure
    ports:
      - "8089:8089"
    networks:
      - backend
    profiles:
      - stage
    build: ./apps/app_auth

  inference-backend:
    container_name: backend
    build: ./apps/inference
    restart: unless-stopped
    env_file:
      - ./apps/inference/.env
    ports:
      - "8080:8080"
    profiles:
      - prod
    networks:
      - backend

  minio:
    container_name: minio
    image: 'bitnami/minio:latest'
    volumes:
      - 'minio_data:/data'
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    env_file:
      - apps/inference/.minio.env
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_USE_SSL
      - MINIO_BUCKET_NAME
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    profiles:
      - dev
      - prod
    networks:
      - backend

  ml:
    container_name: ml
    build: ./apps/ml
    ports:
      - "8083:8083"
    restart: always
    networks:
      - backend
    depends_on:
      - minio
      - inference-backend
    profiles:
      - dev
      - prod

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  minio_data: